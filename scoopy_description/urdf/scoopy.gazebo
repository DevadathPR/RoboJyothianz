<?xml version="1.0" ?>
<robot name="scoopy" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/DarkGrey" />
<xacro:property name="white_color" value="Gazebo/White" />
<xacro:property name="black_color" value="Gazebo/Black" />

<xacro:property name="general_friction" value="0.1" />
<xacro:property name="wheel_friction" value="1" />

<xacro:property name="camera_link_name" value="realsense_1" />
<xacro:property name="camera_name" value="real_sense" />
<xacro:property name="sprayer_name" value="vacuum_rigid" />




<gazebo>
  <plugin filename="libgazebo_ros_control.so" name="control">
      <robotNamespace>scoopy</robotNamespace>
  </plugin>
</gazebo>

  <gazebo>
    <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo>

 <gazebo reference="lidar_1">
    <sensor type="ray" name="rplidar_a1">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.01</min_angle>
            <max_angle>3.01</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>15.0</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.001</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>lidar_1</frameName>
      </plugin>
    </sensor>
  </gazebo>

<!--
    <gazebo>
      <plugin name="gazebo_ros_vacuum_gripper" filename="libgazebo_ros_vacuum_gripper.so">
        <robotNamespace>scoopy</robotNamespace>
        <bodyName>vacuum_1</bodyName>
        <topicName>grasping</topicName>
      </plugin>
    </gazebo>

-->

<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="post_1">
  <material>${black_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="blw_1">
  <material>${white_color}</material>
  <mu1>${wheel_friction}</mu1>
  <mu2>${wheel_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="flw_1">
  <material>${white_color}</material>
  <mu1>${wheel_friction}</mu1>
  <mu2>${wheel_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="brw_1">
  <material>${white_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="frw_1">
  <material>${white_color}</material>
  <mu1>${wheel_friction}</mu1>
  <mu2>${wheel_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="teslecope_outer_1">
  <material>${body_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="telescope_mid_1">
  <material>${body_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="telescope_inner_1">
  <material>${body_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="scooper_main_1">
  <material>${body_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="vacuum_1">
    <material>Gazebo/Blue</material>
    <mu1>10</mu1>
    <mu2>10</mu2>
    <minDepth>0.003</minDepth>
    <maxVel>0</maxVel>
    <kp>1000000.0</kp>
    <kd>1.0</kd>
</gazebo>

<gazebo reference="sprayer_1">
  <material>${white_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="lid_1">
  <material>${body_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="camera_rotator_1">
  <material>${body_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="realsense_1">
  <material>${black_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="hat_1">
  <material>${body_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="lidar_1">
  <material>${white_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>

<gazebo reference="camera_1">
  <material>${black_color}</material>
  <mu1>${general_friction}</mu1>
  <mu2>${general_friction}</mu2>
  <selfCollide>true</selfCollide>
</gazebo>


  <gazebo reference="camera_1">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>scooopy/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>






<gazebo reference="${camera_link_name}">
  <sensor name="${camera_link_name}_camera" type="depth">
    <update_rate>20</update_rate>
    <camera>
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>3</far>
      </clip>
    </camera>
    <plugin name="${camera_link_name}_controller" filename="libgazebo_ros_openni_kinect.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>1.0</updateRate>
      <cameraName>${camera_name}_ir</cameraName>
      <imageTopicName>/${camera_name}/color/image_raw</imageTopicName>
      <cameraInfoTopicName>/${camera_name}/color/camera_info</cameraInfoTopicName>
      <depthImageTopicName>/${camera_name}/depth/image_raw</depthImageTopicName>
      <depthImageInfoTopicName>/${camera_name}/depth/camera_info</depthImageInfoTopicName>
      <pointCloudTopicName>/${camera_name}/depth/points</pointCloudTopicName>
      <frameName>depth_cam_frame</frameName>
      <pointCloudCutoff>0.5</pointCloudCutoff>
      <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
      <distortionK1>0.00000001</distortionK1>
      <distortionK2>0.00000001</distortionK2>
      <distortionK3>0.00000001</distortionK3>
      <distortionT1>0.00000001</distortionT1>
      <distortionT2>0.00000001</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin>
  </sensor>
</gazebo>


<!--
<gazebo reference="${sprayer_name}"> -->

  <plugin name="water_gun_plugin" filename="libMRSGazeboWaterGunPlugin.so">

<!--
    <muzzle_velocity>0.2</muzzle_velocity>
    <offset_x>0</offset_x>
    <offset_y>0</offset_y>
    <offset_z>0</offset_z>
    <spread>2</spread>
    <particle_capacity>1000</particle_capacity>
-->

    <spawning_reservoir>1</spawning_reservoir>

  </plugin>

<!--


<gazebo reference="${camera_link_name}">
  <plugin name="water_gun_plugin" filename="libMRSGazeboWaterGunPlugin.so">
    <muzzle_velocity>${muzzle_velocity}</muzzle_velocity>
    <offset_x>${offset_x}</offset_x>
    <offset_y>${offset_y}</offset_y>
    <offset_z>${offset_z}</offset_z>
    <spread>${spread}</spread>
    <particle_capacity>${particle_capacity}</particle_capacity>
    <spawning_reservoir>${spawning_reservoir}</spawning_reservoir>
  </plugin>
</gazebo>





-->


</robot>
